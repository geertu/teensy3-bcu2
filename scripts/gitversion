#!/bin/sh
# SPDX-License-Identifier: GPL-2.0
#
# This scripts retrieves version information from git
#
# Based on scripts/setlocalversion from the Linux kernel source tree
#

# Check for git and a git repo.
if test -z "$(git rev-parse --show-cdup 2>/dev/null)" &&
   head=`git rev-parse --verify --short HEAD 2>/dev/null`; then

	# If we are at a tagged commit (like "v2.6.30-rc6"), we ignore
	# it, because this version is defined in the top level Makefile.
	if [ -z "`git describe --exact-match 2>/dev/null`" ]; then

		# If we are past a tagged commit we just print it.
		if atag="`git describe 2>/dev/null`"; then
			printf '%s' "$atag"

		# If we don't have a tag at all we print g{commitish}.
		else
			printf 'g%s' "$head"
		fi
	fi

	# Check for uncommitted changes.
	# First, with git-status, but --no-optional-locks is only
	# supported in git >= 2.14, so fall back to git-diff-index if
	# it fails. Note that git-diff-index does not refresh the
	# index, so it may give misleading results. See
	# git-update-index(1), git-diff-index(1), and git-status(1).
	if {
		git --no-optional-locks status -uno --porcelain 2>/dev/null ||
		git diff-index --name-only HEAD
	} | grep -qvE '^(.. )?scripts/package'; then
		printf '%s' -dirty
	fi
fi
